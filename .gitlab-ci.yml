image: ubuntu:24.04

services:
  - name: postgres:16
    alias: postgres
  - name: rabbitmq:3.12
    alias: rabbitmq

variables:
  POSTGRES_DB: test_db
  POSTGRES_USER: user
  POSTGRES_PASSWORD: password
  DB_HOST: postgres
  DB_NAME: test_db
  DB_USER: user
  DB_PASSWORD: password
  DB_PORT: 5432
  DB_ENGINE: django.db.backends.postgresql
  CELERY_BROKER_USER: guest
  CELERY_BROKER_PASSWORD: guest
  CELERY_BROKER_VHOST: ""
  CELERY_BROKER_HOST: rabbitmq

stages:
  - check
  - build
  - deploy

before_script:
  - apt-get update && apt-get -y install curl python3-virtualenv python3-psycopg
  - virtualenv env
  - env/bin/pip install -r requirements.txt

cache:
  paths:
    - env
    - node_modules

check_pycodestyle:
  stage: check
  script:
    - env/bin/pycodestyle --config=.pycodestylerc .

check_eslint:
  stage: check
  script:
    - curl -fsSL https://deb.nodesource.com/setup_20.x | bash - 
    - apt-get install -y nodejs
    - npm install
    - npm run lint

build:
  stage: build
  script:
    - ./setup.sh dev
    - env/bin/celery -A boxes worker -l info &
    - ci/monitor-celery.sh

deploy_staging:
  stage: deploy
  script:
    - apt-get update && apt-get install -y openssh-client
    - eval $(ssh-agent -s)
    - cat "$DEPLOY_PRIVATE_KEY" > /tmp/deploy-key
    - chmod 600 /tmp/deploy-key
    - ssh-add /tmp/deploy-key
    - mkdir -p ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\tUserKnownHostsFile=/dev/null\n" > ~/.ssh/config
    - ssh-keyscan $STAGING_SERVER >> ~/.ssh/known_hosts
    - ssh $DEPLOY_USER@$DEPLOY_SERVER "cd /var/www/mikes-boxes && git pull && ./setup.sh update"
  only:
    - main
